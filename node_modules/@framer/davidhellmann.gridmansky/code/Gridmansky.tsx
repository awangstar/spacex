import * as React from 'react';
import { PropertyControls, ControlType } from 'framer';

// Define type of property
interface Props {
  columns: number;
  gutter: number;
  gutters: boolean;
}

export class Gridmansky extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    columns: 12,
    gutter: 16,
    gutters: true,
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    columns: {
      type: ControlType.Number,
      title: 'Columns',
      min: 1,
      max: 96,
    },
    gutter: {
      type: ControlType.Number,
      title: 'Gutter',
      min: 0,
      max: 80,
    },
    gutters: {
      type: ControlType.Boolean,
      title: 'Gutters',
    },
  };

  getCols = () => {
    return this.props.columns + 1;
  };

  getGutter = () => {
    return this.props.gutters ? this.props.gutter : 0;
  };

  createDivs = () => {
    let divs = [];
    const styleGutter: React.CSSProperties = {
      height: '100%',
      width: this.getGutter() + 'px',
      background: 'rgba(0, 255, 255, 0.2)',
      overflow: 'hidden',
    };

    const styleColumn: React.CSSProperties = {
      height: '100%',
      width: '100%',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'space-between',
      textAlign: 'center',
      borderLeft: '1px solid cyan',
      overflow: 'hidden',
    };

    // Outer loop to create parent
    for (let i = 1; i < this.getCols(); i++) {
      divs.push(
        <div style={styleColumn}>
          <span style={styleGutter} />
          <span style={styleGutter} />
        </div>,
      );
    }
    return divs;
  };

  render() {
    const styleWrapper: React.CSSProperties = {
      height: '100%',
      width: '100%',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      background: 'rgba(0, 255, 255, 0.1)',
      overflow: 'hidden',
      paddingLeft: this.getGutter() + 'px',
      paddingRight: this.getGutter() + 'px',
    };

    const styleWrapperContent: React.CSSProperties = {
      height: '100%',
      width: '100%',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      overflow: 'hidden',
      borderRight: '1px solid cyan',
    };

    return (
      <div style={styleWrapper}>
        <div style={styleWrapperContent}>{this.createDivs()}</div>
      </div>
    );
  }
}
